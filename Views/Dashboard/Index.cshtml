@model IEnumerable<TSensor.Web.Models.Entity.ActualSensorValue>
@{
    ViewData["Title"] = "Актуальные значения датчиков";
    var actualValues = System.Text.Json.JsonSerializer.Serialize(
        Model.ToDictionary(p => p.SensorGuid, p => p.SensorValueId));
}

<style>
    table {
        border-collapse: collapse;
        font-size: 10px;
    }

    th {
        font-weight: normal;
        background: #4B94BF;
        color: white;
        text-align: center;
        font-size: 12px;
    }

    th, td {
        padding: 4px 12px;
    }

    .sensor-header {
        background: #D2D6DE;
        text-align: center;
        line-height: 22px;
    }
</style>

<div class="row">
    <table class="container">
        <thead>
            <tr>
                <th>дата получения<br />данных с сервера</th>
                <th>дата получения<br />данных с устройства</th>
                <th>дата получения<br />данных с датчика</th>
                <th>значение</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var value in Model)
            {
                <tr data-sensorguid="@value.SensorGuid"><td class="sensor-header" colspan="4">Датчик @value.SensorGuid</td></tr>
                <tr data-sensorguid="@value.SensorGuid">
                    <td>@DateTime.Now.ToString()</td>
                    <td>@value.InsertDate.ToString()</td>
                    <td>@value.EventDate.ToString()</td>
                    <td>@value.Value</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script src="/npm/@@microsoft/signalr/dist/browser/signalr.min.js"></script>
<script>
    var actualValues = @Html.Raw(@actualValues);
    const connection = new signalR.HubConnectionBuilder().withUrl('/broadcast').build();

    const container = $('.container tbody');

    connection.on('sensorupdate', function (data, date) {
        data.forEach(function (item) {
            if (actualValues[item.sensorGuid] == item.sensorValueId) {
                container.find('tr[data-sensorguid="' + item.sensorGuid + '"]:first').next().find('td:first').html(date);
            } else {
                actualValues[item.sensorGuid] = item.sensorValueId;

                var html = '<tr data-sensorguid="' + item.sensorGuid + '"><td>' +
                    date + '</td><td>' +
                    item.date + '</td><td>' +
                    item.eventDate + '</td><td>' +
                    item.value + '</td></tr>';

                container.find('tr[data-sensorguid="' + item.sensorGuid + '"]:first').after(html);

                var rowCount = container.find('tr[data-sensorguid="' + item.sensorGuid + '"]').length;
                if (rowCount == 5) {
                    container.find('tr[data-sensorguid="' + item.sensorGuid + '"]:last').remove();
                }
            }
        });
    });

    connection.start();
</script>