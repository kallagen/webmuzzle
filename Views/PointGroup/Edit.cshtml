@model PointGroupCreateEditViewModel
@{
    ViewBag.Title = $"Редактирование группы объектов \"{Model.Name}\"";
}

@section AdditionalHeader
{
    @Html.ActionLink("назад к списку групп объектов", "List", "PointGroup", null, new { @class = "footer-link pull-right additional-header-link" })
}

<div class="row">
    <div class="col-md-12">
        <div class="box">
            @using (Html.BeginForm("Edit", "PointGroup", FormMethod.Post, new { @class = "form-horizontal", autocomplete = "off" }))
            {
                @Html.HiddenFor(m => m.PointGroupGuid)
                <div class="box-body">
                    <div class="form-group @Html.ValidState("Name")">
                        <label for="Name" class="col-sm-3 control-label">Название</label>
                        <div class="col-sm-9">
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Name, null, new { @class = "help-block" })
                        </div>
                    </div>
                </div>
                <div class="box-footer">
                    <a id="remove-pointgroup-button" href="javascript:void(0)" class="btn bg-red">Удалить</a>
                    <button type="submit" class="btn bg-blue pull-right">Сохранить</button>
                </div>
            }
        </div>
    </div>
    <div class="col-md-12">
        <div class="row">
            @using (Html.BeginForm("AddPoint", "PointGroup", FormMethod.Post, new { @class = "form-horizontal", autocomplete = "off" }))
            {
                <div class="col-md-6">
                    <h3>Объекты в группе</h3>
                </div>
                @if (Model.AvailablePointList.Any())
                {
                    <div class="col-md-4">
                        @Html.Hidden("pointGroupGuid", Model.PointGroupGuid)
                        @Html.DropDownList("pointGuid", new SelectList(Model.AvailablePointList, "PointGuid", "Name"), new { @class = "form-control inline-header-button" })
                    </div>
                    <div class="col-md-2">
                        <button type="submit" class="btn bg-blue btn-block inline-header-button">Добавить объект</button>
                    </div>
                }
            }
        </div>
        <div class="row">
            <div class="col-md-12">
                @if (Model.HasData)
                {
                    <div class="box box-solid">
                        <div class="box-body table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th class="text-center table-center-header">Название</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Data)
                                    {
                                        <tr>
                                            <td>@Html.ActionLink(item.Name, "Edit", "Point", new { pointGuid = item.PointGuid }, null)</td>
                                            <td class="table-remove-cell"><a class="remove-point-button text-red" href="javascript:void(0)" data-pointguid="@item.PointGuid">удалить</a></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
                else
                {
                    <div>В группе нет объектов</div>
                }
            </div>
        </div>
    </div>
</div>
@using (Html.BeginForm("Remove", "PointGroup", FormMethod.Post, new { id = "remove-pointgroup-form", @class = "hidden" }))
{
    @Html.Hidden("PointGroupGuid, Model.PointGroupGuid", new { id = "remove-pointgroup-guid" })
}
@using (Html.BeginForm("RemovePoint", "PointGroup", FormMethod.Post, new { id = "remove-point-form", @class = "hidden" }))
{
    @Html.Hidden("PointGroupGuid", Model.PointGroupGuid, new { id = "remove-point-group-guid" })
    @Html.Hidden("PointGuid", null, new { id = "remove-point-guid" })
}
<script>
    document.querySelector('#Name').focus();
    $('#remove-pointgroup-button').click(function () {
        new ConfirmModal('Удалить группу объектов?', function () {
            $('#remove-pointgroup-form').submit();
        }).show();
    });
    $('.remove-point-button').click(function () {
        var pointGuid = $(this).data('pointguid');
        new ConfirmModal('Удалить объект из группы?', function () {
            $('#remove-point-guid').val(pointGuid);
            $('#remove-point-form').submit();
        }).show();
    });

</script>
@Html.ViewModelWindow()