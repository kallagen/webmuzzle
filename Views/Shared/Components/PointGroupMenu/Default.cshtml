@using TSensor.Web.ViewComponents;
@using TSensor.Web.ViewModels.Point;
@model IEnumerable<TSensor.Web.Models.Entity.PointGroup>
@{
    Layout = null;
}
@if (Model?.Any() == true)
{
    if (Model.Any(p => p.PointGroupGuid == PointGroupMenu.NotAssignedSensorGroupGuid))
    {
        <li>@Html.ActionLink("Датчики без привязки", "NotAssigned", "Point")</li>
    }
    <li><a><input type="checkbox" data-kind="all" class="menu-checkbox" />Все объекты</a></li>
    foreach (var group in Model.Where(p => p.PointGroupGuid != PointGroupMenu.NotAssignedSensorGroupGuid)
        .OrderBy(p => string.IsNullOrEmpty(p.Name)).ThenBy(p => p.Name))
    {
        if (string.IsNullOrEmpty(group.Name))
        {
            foreach (var point in group.PointList.OrderBy(p => p.Name))
            {
                @Html.Partial("MenuElementPoint", new MenuElementViewModel { Point = point });
            }
        }
        else
        {
            @if (group.PointList.Any())
            {
                <li class="treeview">
                    <a href="javascript:void(0)">
                        <input type="checkbox" data-kind="group" data-group="@group.PointGroupGuid" class="menu-checkbox" /><span>@group.Name</span>
                        <span class="pull-right-container"><i class="fa fa-angle-left pull-right"></i></span>
                    </a>
                    <ul class="treeview-menu">
                        @foreach (var point in group.PointList.OrderBy(p => p.Name))
                        {
                            @Html.Partial("MenuElementPoint", new MenuElementViewModel { Point = point, GroupGuid = group.PointGroupGuid });
                        }
                    </ul>
                </li>
            }
            else
            {
                <li><a><input data-kind="group" data-group="@group.PointGroupGuid" type="checkbox" class="menu-checkbox" />@group.Name</a></li>
            }
        }
    }
}
<script>
    $('.menu-checkbox').iCheck({
        checkboxClass: 'icheckbox_square-blue'
    });
</script>