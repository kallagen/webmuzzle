@model UserEditViewModel
@{
    ViewBag.Title = $"Редактирование пользователя " +
        (string.IsNullOrWhiteSpace(Model.Name) ? string.Empty : $" \"{Model.Name}\"");
}

@section AdditionalHeader
{
    @Html.ActionLink("назад к списку пользователей", "Search", "User", null, new { @class = "footer-link pull-right additional-header-link" })
}

<div class="row">
    <div class="col-md-12">
        <div class="box">
            @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { @class = "form-horizontal", autocomplete = "off" }))
            {
                @Html.HiddenFor(m => m.UserGuid)
                @Html.HiddenFor(m => m.SetNewPassword)
                <div class="box-body">
                    <div class="form-group @Html.ValidState("Login")">
                        <label for="Login" class="col-sm-3 control-label">Логин</label>
                        <div class="col-sm-9"><span class="form-control">@Model.Login</span></div>
                    </div>
                    <div class="form-group">
                        <span class="@Html.ValidState("FirstName")"><label for="FirstName" class="col-sm-3 control-label">Имя</label></span>
                        <div class="col-sm-9 inline-form-container">
                            <span class="@Html.ValidState("FirstName")">
                                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control input-inline" })
                            </span>
                            <span class="@Html.ValidState("LastName")">
                                <label for="LastName" class="control-label">Фамилия</label>
                                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control input-inline" })
                            </span>
                            <span class="@Html.ValidState("Patronymic")">
                                <label for="Patronymic" class="control-label">Отчество</label>
                                @Html.TextBoxFor(m => m.Patronymic, new { @class = "form-control input-inline" })
                            </span>
                            <div class="@Html.ValidState("FirstName") @Html.ValidState("LastName") @Html.ValidState("Patronymic")">
                                <span class="firstname-validation-block @Html.ValidState("FirstName")">@Html.ValidationMessageFor(m => m.FirstName, null, new { @class = "help-block" })</span>
                                <span class="lastname-validation-block @Html.ValidState("LastName")">@Html.ValidationMessageFor(m => m.LastName, null, new { @class = "help-block" })</span>
                                <span class="patronymic-validation-block @Html.ValidState("Patronymic")">@Html.ValidationMessageFor(m => m.Patronymic, null, new { @class = "help-block" })</span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group @Html.ValidState("Role")">
                        <label for="Role" class="col-sm-3 control-label">Группа</label>
                        <div class="col-sm-9">
                            @Html.DropDownListFor(m => m.Role, new SelectList(AuthService.Roles, "Key", "Value"), string.Empty, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Role, null, new { @class = "help-block" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Description" class="col-sm-3 control-label">Примечание</label>
                        <div class="col-sm-9">
                            @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-offset-3 col-sm-9">
                            <div class="checkbox">
                                <label>@Html.CheckBoxFor(m => m.IsInactive)пользователь заблокирован</label>
                            </div>
                        </div>
                    </div>
                    <div class="box-group" id="new-password-accordion">
                        <div class="form-group">
                            <div class="col-sm-3 control-label"></div><div class="col-sm-9">
                                <a data-toggle="collapse" href="#new-password-collapse" class="collapsed" aria-expanded="@Model.SetNewPassword">установить новый пароль</a>
                            </div>
                        </div>
                        <div id="new-password-collapse" class="panel-collapse collapse @if(Model.SetNewPassword){<text>in</text>}" aria-expanded="@Model.SetNewPassword">
                            <div class="form-group @Html.ValidState("NewPassword")">
                                <label for="Password" class="col-sm-3 control-label">Новый пароль</label>
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(m => m.NewPassword, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.NewPassword, null, new { @class = "help-block" })
                                </div>
                            </div>
                            <div class="form-group @Html.ValidState("NewPasswordConfirm")">
                                <label for="NewPasswordConfirm" class="col-sm-3 control-label">Подтверждение пароля</label>
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(m => m.NewPasswordConfirm, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.NewPasswordConfirm, null, new { @class = "help-block" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="box-footer">
                    <a id="remove-user-button" href="javascript:void(0)" class="btn bg-red">Удалить</a>
                    <button type="submit" class="btn bg-blue pull-right">Сохранить</button>
                </div>
            }
        </div>
    </div>
</div>
@using (Html.BeginForm("Remove", "User", FormMethod.Post, new { id = "remove-user-form", @class = "hidden" }))
{
    @Html.HiddenFor(m => m.UserGuid)
}
<script>
    document.querySelector('#FirstName').focus();

    var setNewPasswordInput = $('#SetNewPassword');
    $('#new-password-accordion').on('hide.bs.collapse', function () {
        setNewPasswordInput.val(false);
    }).on('show.bs.collapse', function () {
        setNewPasswordInput.val(true);
    });

    $('#remove-user-button').click(function () {
        new ConfirmModal('Удалить пользователя?', function () {
            $('#remove-user-form').submit();
        }).show();
    });
</script>
@Html.ViewModelWindow()