@using TSensor.Web.Models.Services;
@model PointCreateEditViewModel
@{
    ViewBag.Title = $"Редактирование объекта \"{Model.Name}\"";

    var mapOptions = string.Empty;
    if (Model != null)
    {
        mapOptions = JsonSerializer.Serialize(
            new
            {
                defaultLon = Model.DefaultLongitude,
                defaultLat = Model.DefaultLatitude,
                lon = Model.LongitudeParsed,
                lat = Model.LatitudeParsed,
            });
    }
}

@section AdditionalHeader
{
    @Html.ActionLink("назад к списку объектов", "List", "Point", null, new { @class = "footer-link pull-right additional-header-link" })
}

<div class="row">
    <div class="col-md-12">
        <div class="box">
            @using (Html.BeginForm("Edit", "Point", FormMethod.Post, new { @class = "form-horizontal", autocomplete = "off" }))
            {
                @Html.HiddenFor(m => m.PointGuid)
                @Html.HiddenFor(m => m.DefaultLongitude)
                @Html.HiddenFor(m => m.DefaultLatitude)
                <div class="box-body">
                    <div class="form-group @Html.ValidState("Name")">
                        <label for="Name" class="col-sm-3 control-label">Название</label>
                        <div class="col-sm-9">
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Name, null, new { @class = "help-block" })
                        </div>
                    </div>
                    <div class="form-group @Html.ValidState("Address")">
                        <label for="Address" class="col-sm-3 control-label">Адрес</label>
                        <div class="col-sm-9">
                            @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Address, null, new { @class = "help-block" })
                        </div>
                    </div>
                    <div class="form-group @Html.ValidState("Phone")">
                        <label for="Phone" class="col-sm-3 control-label">Телефон</label>
                        <div class="col-sm-9">
                            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Phone, null, new { @class = "help-block" })
                        </div>
                    </div>
                    <div class="form-group @Html.ValidState("Email")">
                        <label for="Email" class="col-sm-3 control-label">Email</label>
                        <div class="col-sm-9">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, null, new { @class = "help-block" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Description" class="col-sm-3 control-label">Примечание</label>
                        <div class="col-sm-9">
                            @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3 control-label"></div>
                        <div class="col-sm-9">Введите координаты объекта или укажите его на карте</div>
                    </div>
                    <div class="form-group @Html.ValidState("Longitude")">
                        <label for="Longitude" class="col-sm-3 control-label">Долгота</label>
                        <div class="col-sm-9">
                            @Html.TextBoxFor(m => m.Longitude, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Longitude, null, new { @class = "help-block" })
                        </div>
                    </div>
                    <div class="form-group @Html.ValidState("Latitude")">
                        <label for="Latitude" class="col-sm-3 control-label">Широта</label>
                        <div class="col-sm-9">
                            @Html.TextBoxFor(m => m.Latitude, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Latitude, null, new { @class = "help-block" })
                        </div>
                    </div>
                    <div>
                        <div id="map" class="map" style="height: 400px; width: 100%"></div>
                    </div>
                    <link rel="stylesheet" href="~/lib/ol/css/ol.css" />
                    <script src="~/lib/ol/build/ol.js"></script>
                    <script src="~/js/map.js"></script>
                    <script>
                        var map = new Map();

                        var lonInput = document.querySelector('#Longitude');
                        var latInput = document.querySelector('#Latitude');

                        map.initPointSelect(@Html.Raw(mapOptions), { lon: lonInput, lat: latInput });
                    </script>
                </div>
                <div class="box-footer">
                    <a id="remove-point-button" href="javascript:void(0)" class="btn bg-red">Удалить</a>
                    <button type="submit" class="btn bg-blue pull-right">Сохранить</button>
                </div>
            }
        </div>
    </div>
    <div class="col-md-12">
        <div class="row">
            <div class="col-md-9">
                <h3>Резервуары на объекте</h3>
            </div>
            <div class="col-md-3">
                @Html.ActionLink("Добавить резервуар", "Create", "Tank", new { pointGuid = Model.PointGuid }, new { @class = "btn bg-blue btn-block inline-header-button" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @if (Model.HasData)
                {

                    <div class="box box-solid">
                        <div class="box-body table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th rowspan="2" class="table-center-header">Название</th>
                                        <th rowspan="2" class="table-center-header">Продукт</th>
                                        <th colspan="3" class="text-center">Основной датчик</th>
                                        <th rowspan="2" class="table-center-header">Использовать<br />дополнительный<br />датчик</th>
                                        <th colspan="3" class="text-center">Дополнительный датчик</th>
                                        <th colspan="2" class="text-center">Изменения массы</th>
                                        <th rowspan="2" class="table-center-header">Примечание</th>
                                    </tr>
                                    <tr>
                                        <th>Код устройства</th>
                                        <th>Код ИЗК</th>
                                        <th>Код датчика</th>
                                        <th>Код устройства</th>
                                        <th>Код ИЗК</th>
                                        <th>Код датчика</th>
                                        <th>Погрешность,<br />тонн</th>
                                        <th>Время индикации<br />изменения, секунд</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Data.OrderBy(p => p.Name, new AlphanumComparer()))
                                    {
                                        <tr>
                                            <td>@Html.ActionLink(item.Name, "Edit", "Tank", new { pointGuid = Model.PointGuid, tankGuid = item.TankGuid }, null)</td>
                                            <td>@item.ProductName</td>
                                            <td>@item.MainDeviceGuid</td>
                                            <td>@item.MainIZKId</td>
                                            <td>@item.MainSensorId</td>
                                            <td>@Html.CheckBox("DualMode", item.DualMode, new { disabled = "disabled" })</td>
                                            <td>@item.SecondDeviceGuid</td>
                                            <td>@item.SecondIZKId</td>
                                            <td>@item.SecondSensorId</td>
                                            <td>@item.WeightChangeDelta</td>
                                            <td>@item.WeightChangeTimeout</td>
                                            <td>@item.Description</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                }
                else
                {
                    <div>На объекте нет резервуаров</div>
                }
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <div class="row">
            @using (Html.BeginForm("AddUser", "Point", FormMethod.Post, new { @class = "form-horizontal", autocomplete = "off" }))
            {
                <div class="col-md-6">
                    <h3>Доступ к объекту</h3>
                </div>
                @if (Model.HasAvailableUser)
                {
                    <div class="col-md-4">
                        @Html.Hidden("pointGuid", Model.PointGuid)
                        @Html.DropDownList("userGuid", new SelectList(Model.AvailableUserList.OrderBy(p => p.Name), "UserGuid", "Name"), new { @class = "form-control inline-header-button" })
                    </div>
                    <div class="col-md-2">
                        <button type="submit" class="btn bg-blue btn-block inline-header-button">Добавить оператора</button>
                    </div>
                }
            }
        </div>
        <div class="row">
            <div class="col-md-12">
                @if (Model.HasUser)
                {
                    <div class="box box-solid">
                        <div class="box-body table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Логин</th>
                                        <th>Имя</th>
                                        <th>Примечание</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.UserList)
                                    {
                                        <tr>
                                            <td>@Html.ActionLink(item.Login, "Edit", "User", new { userGuid = item.UserGuid }, null)</td>
                                            <td>@Html.ActionLink(item.Name, "Edit", "User", new { userGuid = item.UserGuid }, null)</td>
                                            <td>@item.Description</td>
                                            <td class="table-remove-cell"><a class="remove-user-button text-red" href="javascript:void(0)" data-userguid="@item.UserGuid">удалить</a></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
                else
                {
                    <div>Ни у одного оператора нет доступа на группу объектов</div>
                }
            </div>
        </div>
    </div>
</div>
@using (Html.BeginForm("Remove", "Point", FormMethod.Post, new { id = "remove-point-form", @class = "hidden" }))
{
    @Html.Hidden("PointGuid", Model.PointGuid, new { id = "remove-point-guid" })
}
@using (Html.BeginForm("RemoveUser", "Point", FormMethod.Post, new { id = "remove-user-form", @class = "hidden" }))
{
    @Html.Hidden("PointGuid", Model.PointGuid, new { id = "remove-point-guid" })
    @Html.Hidden("UserGuid", null, new { id = "remove-user-guid" })
}
<script>
    document.querySelector('#Name').focus();
    $('#remove-point-button').click(function () {
        new ConfirmModal('Удалить объект вместе со всеми резервуарами?', function () {
            $('#remove-point-form').submit();
        }).show();
    });
    $('.remove-user-button').click(function () {
        var userGuid = $(this).data('userguid');
        new ConfirmModal('Запретить оператору доступ к объекту?', function () {
            $('#remove-user-guid').val(userGuid);
            $('#remove-user-form').submit();
        }).show();
    });
</script>
@Html.ViewModelWindow()